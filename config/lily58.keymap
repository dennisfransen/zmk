/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        oe: oe {
            compatible = "zmk,behavior-tap-dance";
            label = "OE";
            #binding-cells = <0>;
            bindings = <&kp O>, <&oe_macro>;
        };

        ae: ae {
            compatible = "zmk,behavior-tap-dance";
            label = "AE";
            #binding-cells = <0>;
            bindings = <&kp I>, <&ae_macro>;
        };

        a: a {
            compatible = "zmk,behavior-tap-dance";
            label = "A";
            #binding-cells = <0>;
            bindings = <&kp U>, <&a_macro>;
        };
    };

    macros {
        ae_macro: ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "AE";
        };

        oe_macro: oe_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "OE_MACRO";
        };

        a_macro: a_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(A)>;
            label = "A_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC  &kp N1       &kp N2          &kp N3              &kp N4            &kp N5                        &kp N6  &kp N7             &kp N8               &kp N9           &kp N0          &kp GRAVE
&kp TAB  &kp Q        &kp W           &kp E               &kp R             &kp T                         &kp Y   &kp U              &kp I                &kp O            &kp P           &kp MINUS
&none    &mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_COMMAND D  &mt LEFT_SHIFT F  &kp G                         &kp H   &mt RIGHT_SHIFT J  &mt RIGHT_COMMAND K  &mt RIGHT_ALT L  &mt RCTRL SEMI  &kp SQT
&none    &kp Z        &kp X           &kp C               &kp V             &kp B   &none        &none    &kp N   &kp M              &kp COMMA            &kp DOT          &kp FSLH        &none
                                      &none               &none             &mo 1   &kp SPACE    &kp RET  &mo 2   &kp BSPC           &none
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &none  &none  &none  &none  &none                     &none   &none   &none  &none  &none  &none
&none   &none  &none  &none  &none  &none                     &none   &none   &none  &none  &none  &none
&none   &none  &none  &none  &none  &none                     &none   &none   &none  &none  &none  &none
&none   &none  &none  &none  &none  &none   &none     &none   &none   &none   &none  &none  &none  &none
                      &none  &none  &trans  &trans    &trans  &trans  &trans  &none
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&none  &none  &none  &none  &none  &none                     &none   &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                     &none   &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                     &none   &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none   &none     &none   &none   &none   &none  &none  &none  &none
                     &none  &none  &trans  &trans    &trans  &trans  &trans  &none
            >;
        };
    };
};
